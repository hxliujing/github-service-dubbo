<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://code.alibabatech.com/schema/dubbo  
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

   <dubbo:application name="${dubbo.application.name}" owner="programmer" organization="javens" />
   <dubbo:registry protocol="zookeeper" address="${dubbo.registry.address}" check="true"/>
   <dubbo:protocol name="dubbo" port="1701" threads="1000" accepts="2000"/>
   <dubbo:service  protocol="dubbo"  timeout="4000"  interface ="com.javens.api.RpcTestService" ref="rpcTestService"/>

    <!--DUBBO 集群容错方式-->
   <!--
       Failover Cluster
        失败自动切换，当出现失败，重试其它服务器。(缺省)
        通常用于读操作，但重试会带来更长延迟。
        可通过retries="2"来设置重试次数(不含第一次)。
   -->
   <dubbo:service  protocol="dubbo"  timeout="4000" interface ="com.javens.api.RpcClusterFailoverService" ref="rpcClusterFailoverService" cluster="failover" retries="2"/>
    <!--
       Failfast Cluster
        快速失败，只发起一次调用，失败立即报错。
        通常用于非幂等性的写操作，比如新增记录。
   -->
    <dubbo:service  protocol="dubbo"  timeout="4000"  interface ="com.javens.api.RpcClusterFailfastService" ref="rpcClusterFailfastService" cluster="failfast"/>
    <!--
      Failsafe Cluster
        失败安全，出现异常时，直接忽略。
        通常用于写入审计日志等操作。
    -->
    <dubbo:service  protocol="dubbo"  timeout="4000"  interface ="com.javens.api.RpcClusterFailsafeService" ref="rpcClusterFailsafeService" cluster="failsafe"/>
    <!--
     Failback Cluster
        失败自动恢复，后台记录失败请求，定时重发。
        通常用于消息通知操作。
    -->
    <dubbo:service  protocol="dubbo"  timeout="4000"  interface ="com.javens.api.RpcClusterFailbackService" ref="rpcClusterFailbackService" cluster="failback"/>
    <!--
    Forking Cluster
        并行调用多个服务器，只要一个成功即返回。
        通常用于实时性要求较高的读操作，但需要浪费更多服务资源。
        可通过forks="2"来设置最大并行数。
   -->
    <dubbo:service  protocol="dubbo"  timeout="4000"  interface ="com.javens.api.RpcClusterForkingService" ref="rpcClusterForkingService" cluster="forking"/>
    <!--
       Broadcast Cluster
        广播调用所有提供者，逐个调用，任意一台报错则报错。(2.1.0开始支持)
        通常用于通知所有提供者更新缓存或日志等本地资源信息。
        重试次数配置如：(failover集群模式生效)
  -->
    <dubbo:service  protocol="dubbo"  timeout="4000"  interface ="com.javens.api.RpcClusterBroadcastService" ref="rpcClusterBroadcastService" cluster="broadcast"/>

    <!--一个接口多种实现-->
    <dubbo:service  protocol="dubbo"  timeout="4000"  interface ="com.javens.api.RpcMultiService" ref="rpcMultiService1" group="hello1" cluster="failfast"/>
    <dubbo:service  protocol="dubbo"  timeout="4000"  interface ="com.javens.api.RpcMultiService" ref="rpcMultiService2" group="hello2" cluster="failsafe"/>
</beans>